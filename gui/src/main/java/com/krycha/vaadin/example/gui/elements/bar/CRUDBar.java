package com.krycha.vaadin.example.gui.elements.bar;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.event.FieldEvents.TextChangeListener;
import com.vaadin.server.ThemeResource;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Embedded;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.NativeButton;

public class CRUDBar extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private HorizontalLayout mainLayout;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_2;
	@AutoGenerated
	private FindTextField findField;
	@AutoGenerated
	private Embedded findIcon;
	@AutoGenerated
	private HorizontalLayout horizontalLayout_1;
	@AutoGenerated
	private NativeButton delete;
	@AutoGenerated
	private NativeButton edit;
	@AutoGenerated
	private NativeButton add;
	private static final long serialVersionUID = -6868518223557459411L;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public CRUDBar() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		add.addStyleName("crudbutton-add");
		edit.addStyleName("crudbutton-edit");
		delete.addStyleName("crudbutton-delete");
	}

	public void addButtonListener(ClickListener clickListener) {
		add.addClickListener(clickListener);
	}

	public void removeButtonListener(ClickListener clickListener) {
		delete.addClickListener(clickListener);
	}

	public void editButtonListener(ClickListener clickListener) {
		edit.addClickListener(clickListener);
	}

	public void setDeleteAndEditEnabled(boolean b) {
		delete.setEnabled(b);
		edit.setEnabled(b);
	}

	public void findTextChangeListener(TextChangeListener textChangeListener) {
		findField.addTextChangeListener(textChangeListener);
	}

	public void setSearchInputPrompt(String string) {
		findField.setInputPrompt(string);
	}

	@AutoGenerated
	private HorizontalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new HorizontalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(false);

		// top-level component properties
		setWidth("100.0%");
		setHeight("-1px");

		// horizontalLayout_1
		horizontalLayout_1 = buildHorizontalLayout_1();
		mainLayout.addComponent(horizontalLayout_1);

		// horizontalLayout_2
		horizontalLayout_2 = buildHorizontalLayout_2();
		mainLayout.addComponent(horizontalLayout_2);
		mainLayout.setComponentAlignment(horizontalLayout_2, new Alignment(6));

		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		horizontalLayout_1 = new HorizontalLayout();
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setWidth("-1px");
		horizontalLayout_1.setHeight("-1px");
		horizontalLayout_1.setMargin(false);
		horizontalLayout_1.setSpacing(true);

		// add
		add = new NativeButton();
		add.setStyleName("crudbutton");
		add.setCaption("");
		add.setIcon(new ThemeResource("icons/add_24px.png"));
		add.setImmediate(true);
		add.setWidth("-1px");
		add.setHeight("-1px");
		horizontalLayout_1.addComponent(add);

		// edit
		edit = new NativeButton();
		edit.setStyleName("crudbutton");
		edit.setCaption("");
		edit.setIcon(new ThemeResource("icons/edit_24px.png"));
		edit.setImmediate(true);
		edit.setWidth("-1px");
		edit.setHeight("-1px");
		horizontalLayout_1.addComponent(edit);

		// delete
		delete = new NativeButton();
		delete.setStyleName("crudbutton");
		delete.setCaption("");
		delete.setIcon(new ThemeResource("icons/delete_24px.png"));
		delete.setImmediate(true);
		delete.setWidth("-1px");
		delete.setHeight("-1px");
		horizontalLayout_1.addComponent(delete);

		return horizontalLayout_1;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_2() {
		// common part: create layout
		horizontalLayout_2 = new HorizontalLayout();
		horizontalLayout_2.setImmediate(false);
		horizontalLayout_2.setWidth("-1px");
		horizontalLayout_2.setHeight("-1px");
		horizontalLayout_2.setMargin(false);

		// findIcon
		findIcon = new Embedded();
		findIcon.setImmediate(false);
		findIcon.setWidth("-1px");
		findIcon.setHeight("-1px");
		findIcon.setSource(new ThemeResource("icons/find_24px.png"));
		findIcon.setType(1);
		findIcon.setMimeType("image/png");
		horizontalLayout_2.addComponent(findIcon);

		// findField
		findField = new FindTextField();
		findField.setImmediate(false);
		findField.setWidth("-1px");
		findField.setHeight("-1px");
		horizontalLayout_2.addComponent(findField);
		horizontalLayout_2.setComponentAlignment(findField, new Alignment(33));

		return horizontalLayout_2;
	}

}
