package com.krycha.vaadin.example.gui.elements.content;

import com.krycha.vaadin.example.entity.Measurement;
import com.krycha.vaadin.example.gui.KpiUI;
import com.vaadin.addon.jpacontainer.JPAContainer;
import com.vaadin.addon.jpacontainer.JPAContainerFactory;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Table;
import com.vaadin.ui.VerticalLayout;

public class MeasurementsView extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private Table measurementsTable;
	private static final long serialVersionUID = -703641064301783568L;
	private JPAContainer<Measurement> measurements;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public MeasurementsView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		measurements = JPAContainerFactory.make(Measurement.class, KpiUI.PERSISTENCE_UNIT);
		measurementsTable.setContainerDataSource(measurements);
		measurementsTable.setVisibleColumns(new Object[] { "shortName", "description" });
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// measurementsTable
		measurementsTable = new Table();
		measurementsTable.setImmediate(false);
		measurementsTable.setWidth("100.0%");
		measurementsTable.setHeight("-1px");
		mainLayout.addComponent(measurementsTable);

		return mainLayout;
	}
}
