package com.krycha.vaadin.example.gui.elements.content;

import com.krycha.vaadin.example.entity.Customer;
import com.krycha.vaadin.example.gui.KpiUI;
import com.krycha.vaadin.example.gui.elements.bar.CRUDBar;
import com.krycha.vaadin.example.gui.elements.content.EditFormWindow.EditorSavedEvent;
import com.krycha.vaadin.example.gui.elements.content.EditFormWindow.EditorSavedListener;
import com.vaadin.addon.jpacontainer.JPAContainer;
import com.vaadin.addon.jpacontainer.JPAContainerFactory;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Table;
import com.vaadin.ui.UI;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Button;

public class CustomersView extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private Table customersTable;
	@AutoGenerated
	private CRUDBar crudBar;
	private static final long serialVersionUID = 614679551144035400L;
	private JPAContainer<Customer> customers;

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public CustomersView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		customers = JPAContainerFactory.make(Customer.class, KpiUI.PERSISTENCE_UNIT);
		customersTable.setContainerDataSource(customers);
		customersTable.setVisibleColumns(new Object[] { "shortName", "description" });
		customersTable.setSelectable(true);
		customersTable.setImmediate(true);

		crudBar.addButtonListener(new Button.ClickListener() {
			private static final long serialVersionUID = -1837123551813071950L;

			@Override
			public void buttonClick(ClickEvent event) {
				final Customer item = new Customer();
				EditFormWindow window = new EditFormWindow(item);
				window.addListener(new EditorSavedListener<Customer>() {
					private static final long serialVersionUID = 8507451157193715182L;

					@Override
					public void editorSaved(EditorSavedEvent<Customer> event) {
						customers.addEntity(item);
					}

				});
				UI.getCurrent().addWindow(window);
			}
		});
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// crudBar
		crudBar = new CRUDBar();
		crudBar.setImmediate(false);
		crudBar.setWidth("100.0%");
		crudBar.setHeight("-1px");
		mainLayout.addComponent(crudBar);

		// customersTable
		customersTable = new Table();
		customersTable.setImmediate(false);
		customersTable.setWidth("100.0%");
		customersTable.setHeight("100.0%");
		mainLayout.addComponent(customersTable);
		mainLayout.setExpandRatio(customersTable, 1.0f);

		return mainLayout;
	}
}
