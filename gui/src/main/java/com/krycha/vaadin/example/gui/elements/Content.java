package com.krycha.vaadin.example.gui.elements;

import java.util.HashMap;
import java.util.Map;

import org.apache.log4j.Logger;

import com.krycha.vaadin.example.gui.elements.content.WelcomeView;
import com.krycha.vaadin.example.gui.elements.menu.Menu;
import com.krycha.vaadin.example.gui.elements.menu.MenuElement;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Panel;
import com.vaadin.ui.VerticalLayout;

public class Content extends CustomComponent implements View {

	private static final long serialVersionUID = 3883694986681550326L;
	private static final Logger LOG = Logger.getLogger(Content.class);
	private static final String DEFAULT_NAV = "default";
	private Menu menu;
	private Map<String, CustomComponent> menuViews = new HashMap<String, CustomComponent>();

	@AutoGenerated
	private HorizontalLayout mainLayout;
	@AutoGenerated
	private Panel panel;
	@AutoGenerated
	private VerticalLayout verticalPanelLayout;

	@AutoGenerated
	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */
	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public Content() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		menuViews.put(DEFAULT_NAV, new WelcomeView());
		for (MenuElement menu : MenuElement.values()) {
			try {
				menuViews.put(menu.getItemName(), (CustomComponent) menu
						.getItemClass().newInstance());
			} catch (InstantiationException e) {
				throw new IllegalArgumentException(e);
			} catch (IllegalAccessException e) {
				throw new IllegalArgumentException(e);
			}
		}
	}

	@Override
	public void enter(ViewChangeEvent event) {

		LOG.debug(event.getParameters());

		if (event.getParameters() == null || event.getParameters().isEmpty()) {
			panel.setContent(menuViews.get(DEFAULT_NAV));
			return;
		}

		String viewItem = event.getParameters();
		if (menuViews.containsKey(viewItem)) {
			panel.setContent(menuViews.get(viewItem));
		}
	}

	@AutoGenerated
	private HorizontalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new HorizontalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// menu
		menu = new Menu();
		menu.setImmediate(false);
		menu.setWidth("-1px");
		menu.setHeight("-1px");
		mainLayout.addComponent(menu);

		// panel
		panel = buildPanel();
		mainLayout.addComponent(panel);

		return mainLayout;
	}

	@AutoGenerated
	private Panel buildPanel() {
		// common part: create layout
		panel = new Panel();
		panel.setImmediate(false);
		panel.setWidth("-1px");
		panel.setHeight("-1px");

		// verticalPanelLayout
		verticalPanelLayout = new VerticalLayout();
		verticalPanelLayout.setImmediate(false);
		verticalPanelLayout.setWidth("100.0%");
		verticalPanelLayout.setHeight("100.0%");
		verticalPanelLayout.setMargin(false);
		panel.setContent(verticalPanelLayout);

		return panel;
	}


	public Menu getMenu() {
		return menu;
	}
}
