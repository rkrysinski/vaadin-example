package com.krycha.vaadin.example.gui.elements.bar;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.event.FieldEvents.TextChangeEvent;
import com.vaadin.event.FieldEvents.TextChangeListener;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.NativeButton;
import com.vaadin.ui.TextField;

public class FindTextField extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private NativeButton find;
	@AutoGenerated
	private TextField findField;
	private static final long serialVersionUID = 2130037312726165787L;
	private TextChangeListener findChangeListener;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public FindTextField() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		find.setEnabled(false);

		findField.addTextChangeListener(new TextChangeListener() {
			private static final long serialVersionUID = 3754289855440071067L;

			@Override
			public void textChange(TextChangeEvent event) {
				if (!"".equals(event.getText()) && !find.isEnabled()) {
					find.setEnabled(true);
				}
				if (findChangeListener != null) {
					findChangeListener.textChange(event);
				}
			}
		});

		find.addClickListener(new ClickListener() {
			private static final long serialVersionUID = 6282711965739565308L;

			@Override
			public void buttonClick(ClickEvent event) {
				find.setEnabled(false);
				findField.setValue("");
				if (findChangeListener != null) {
					findChangeListener.textChange(new TextChangeEvent(findField) {
						private static final long serialVersionUID = 7869360841281282395L;

						@Override
						public String getText() {
							return findField.getValue();
						}

						@Override
						public int getCursorPosition() {
							return 0;
						}
					});
				}
			}
		});
	}

	public void addTextChangeListener(TextChangeListener textChangeListener) {
		findChangeListener = textChangeListener;
	}

	public void setInputPrompt(String inputPrompt) {
		findField.setInputPrompt(inputPrompt);
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("225px");
		mainLayout.setHeight("24px");

		// top-level component properties
		setWidth("225px");
		setHeight("24px");

		// findField
		findField = new TextField();
		findField.setImmediate(false);
		findField.setWidth("225px");
		findField.setHeight("-1px");
		mainLayout.addComponent(findField, "top:0.0px;left:0.0px;");

		// find
		find = new NativeButton();
		find.setStyleName("crudbutton-find");
		find.setImmediate(true);
		find.setWidth("24px");
		find.setHeight("24px");
		mainLayout.addComponent(find, "top:0.0px;right:0.0px;");

		return mainLayout;
	}

}
